<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.company.swurameal.dao.mybatis.GoodsDao">
	<insert id="insert" parameterType="Goods">
		<selectKey keyProperty="goodsId" resultType="int" order="BEFORE">
			select SEQ_GOODSID.nextval from dual
		</selectKey>
		insert into goods(
			GOODS_ID,
			GOODS_NAME,
			CATEGORY,
			SUBCATEGORY,
			PRICE,
			GOODS_COMMENT,
			GOODS_ORIGIN,
			DELIVERY_INFO,
			SELLER,
			SALE_UNIT,
			WEIGHT,
			STOCK,
			STATUS
		)
		values(
			#{goodsId},
	        #{goodsName},
	        #{category},
	        #{subcategory},
	        #{price},
	        #{goodsComment},
	        #{goodsOrigin},
	        #{deliveryInfo},
	        #{seller},
	        #{saleUnit},
	        #{weight},
	        #{stock},
	        #{status}
		)
	</insert>



	<!-- 특정 상품 가져오기 -->
	<select id="selectByGoodsID" resultType="Goods">
		SELECT
			GOODS_ID,
			GOODS_NAME,
			CATEGORY,
			SUBCATEGORY,
			PRICE,
			GOODS_COMMENT, 
	        GOODS_ORIGIN, 
	        DELIVERY_INFO, 
	        SELLER, 
	        SALE_UNIT, 
	        WEIGHT, 
	        STOCK, 
	        STATUS
		FROM goods
		WHERE GOODS_ID = #{goodsId}
	</select>

	<!-- 상품 전체 가져오기 -->
	<select id="selectAllGoods" resultType="Goods">
		SELECT
			GOODS_ID,
			GOODS_NAME,
			CATEGORY,
			SUBCATEGORY,
			PRICE,
			GOODS_COMMENT, 
	        GOODS_ORIGIN, 
	        DELIVERY_INFO, 
	        SELLER, 
	        SALE_UNIT, 
	        WEIGHT, 
	        STOCK, 
	        STATUS
		FROM goods
	</select>
	
	<!-- 상품 카테고리 가져오기 -->
	<select id ="selectGoodsByCategory" resultType="Goods" 
		parameterType="String">
		SELECT
			GOODS_ID,
			GOODS_NAME,
			CATEGORY,
			SUBCATEGORY,
			PRICE,
			GOODS_COMMENT, 
	        GOODS_ORIGIN, 
	        DELIVERY_INFO, 
	        SELLER, 
	        SALE_UNIT, 
	        WEIGHT, 
	        STOCK, 
	        STATUS
		FROM goods
		WHERE CATEGORY = #{Category}
		
	</select>
	
	<!-- 상품 서브 카테고리 가져오기 -->
	<select id ="selectGoodsBySubCategory" resultType="Goods" 
		parameterType="String">
		SELECT
			GOODS_ID,
			GOODS_NAME,
			CATEGORY,
			SUBCATEGORY,
			PRICE,
			GOODS_COMMENT, 
	        GOODS_ORIGIN, 
	        DELIVERY_INFO, 
	        SELLER, 
	        SALE_UNIT, 
	        WEIGHT, 
	        STOCK, 
	        STATUS
		FROM goods
		WHERE SUBCATEGORY = #{subcategory}
		
	</select>
	
	<!-- 상품 이미지 가져오기 -->
	<select id="selectAttachByGoodsID" resultType="GoodsImg"
		parameterType="int">
		SELECT
			GOODS_IMG_ID,
			GOODS_ID,
			GOODS_NAME,
			G_ATTACH_ONAME,
			G_ATTACH_TYPE,
			G_ATTACH_DATA,
			IMG_ROLE
		FROM goods_img
		WHERE GOODS_ID = #{goodsId}
	</select>
	
	<!-- 상품 이미지 imgRole에 따라 가져오기 -->
	<select id="selectAttachByImgRole" resultType="GoodsImg"
		parameterType="GoodsImg">
		SELECT
			GOODS_IMG_ID,
			GOODS_ID,
			GOODS_NAME,
			G_ATTACH_ONAME,
			G_ATTACH_TYPE,
			G_ATTACH_DATA,
			IMG_ROLE
		FROM goods_img
		WHERE GOODS_ID = #{goodsId} AND IMG_ROLE = #{imgRole}
	</select>
	
	<select id="selectGoodsBySuggest" parameterType="Goods" resultType="GoodsSuggest">
		<![CDATA[
		SELECT * FROM (
			SELECT
			    g.GOODS_ID,
			    g.GOODS_NAME,
			    DBMS_LOB.SUBSTR(g.GOODS_COMMENT, 30, 1) AS GOODS_COMMENT,
			    g.CATEGORY,
			    g.SUBCATEGORY,
			    g.PRICE,
			    COUNT(oi.GOODS_ID) AS COUNT_GOODS
			FROM
			    goods g
			JOIN
			    order_item oi ON oi.GOODS_ID = g.GOODS_ID
			JOIN
			    "ORDER" o ON o.ORDER_ID = oi.ORDER_ID
			WHERE
			    g.CATEGORY = #{category} 
			    AND o.ORDER_DATE BETWEEN (SYSDATE - 90) AND SYSDATE
			GROUP BY 
			    g.GOODS_ID,
			    g.GOODS_NAME,
			    DBMS_LOB.SUBSTR(g.GOODS_COMMENT, 30, 1),
			    g.CATEGORY,
			    g.SUBCATEGORY,
			    g.PRICE
			ORDER BY 
			    COUNT_GOODS DESC
	    )
	    WHERE ROWNUM <= 2
	    ]]>
	</select>

</mapper>

